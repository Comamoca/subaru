{
  "name": "subaru",
  "version": "1.0.0",
  "description": "Gleam WASM runner for Deno",
  "exports": {
    ".": "./src/subaru_runner.ts"
  },
  "tasks": {
    "help": "deno run --allow-all -A -q src/cli.ts --help && echo '\\n📋 Available deno tasks:' && echo '  deno task setup       📥 Download Gleam WASM compiler' && echo '  deno task test        🧪 Run Deno tests' && echo '  deno task example     🚀 Run example usage' && echo '  deno task fmt         ✨ Format TypeScript code' && echo '  deno task lint        🔍 Lint TypeScript code' && echo '  deno task check       🔧 Type check TypeScript code' && echo '  deno task build-gleam 🔨 Build Gleam project' && echo '  deno task run-gleam   ▶️  Run Gleam project' && echo '  deno task clean       🧹 Clean generated files' && echo '  deno task dev         🛠️  Setup and run dev environment'",
    "setup": "deno run --allow-all src/setup.ts",
    "test": "echo '🧪 Running tests...' && deno test --allow-all test/",
    "example": "echo '🚀 Running examples...' && deno run --allow-all examples/simple_usage.ts",
    "example:debug": "deno run --allow-all examples/debug_usage.ts",
    "example:preload": "deno run --allow-all examples/preload_example.ts",
    "fmt": "echo '✨ Formatting code...' && deno fmt",
    "lint": "echo '🔍 Linting code...' && deno lint",
    "check": "echo '🔧 Type checking...' && deno check src/*.ts test/*.ts examples/*.ts",
    "build-gleam": "echo '🔨 Building Gleam project...' && gleam build",
    "run-gleam": "echo '▶️  Running Gleam project...' && gleam run",
    "clean": "echo '🧹 Cleaning up...' && rm -rf wasm-compiler/ build/ public/",
    "dev": "deno task setup && echo '🛠️  Development environment ready!' && echo 'Try: deno task example'",
    "cli": "deno run --allow-all src/cli.ts",
    "init-config": "deno run --allow-all src/cli.ts --init-config"
  },
  "fmt": {
    "useTabs": false,
    "lineWidth": 100,
    "indentWidth": 2,
    "semiColons": true,
    "singleQuote": false,
    "proseWrap": "preserve"
  },
  "lint": {
    "rules": {
      "tags": ["recommended"]
    }
  }
}
